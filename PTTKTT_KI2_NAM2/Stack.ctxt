#BlueJ class context
comment0.target=Stack
comment0.text=\r\n\ \ The\ {@code\ Stack}\ class\ represents\ a\ last-in-first-out\ (LIFO)\ stack\ of\ generic\ items.\r\n\ \ It\ supports\ the\ usual\ <em>push</em>\ and\ <em>pop</em>\ operations,\ along\ with\ methods\r\n\ \ for\ peeking\ at\ the\ top\ item,\ testing\ if\ the\ stack\ is\ empty,\ and\ iterating\ through\r\n\ \ the\ items\ in\ LIFO\ order.\r\n\ \ <p>\r\n\ \ This\ implementation\ uses\ a\ singly\ linked\ list\ with\ a\ static\ nested\ class\ for\r\n\ \ linked-list\ nodes.\ See\ {@link\ LinkedStack}\ for\ the\ version\ from\ the\r\n\ \ textbook\ that\ uses\ a\ non-static\ nested\ class.\r\n\ \ See\ {@link\ ResizingArrayStack}\ for\ a\ version\ that\ uses\ a\ resizing\ array.\r\n\ \ The\ <em>push</em>,\ <em>pop</em>,\ <em>peek</em>,\ <em>size</em>,\ and\ <em>is-empty</em>\r\n\ \ operations\ all\ take\ constant\ time\ in\ the\ worst\ case.\r\n\ \ <p>\r\n\ \ For\ additional\ documentation,\r\n\ \ see\ <a\ href\="https\://algs4.cs.princeton.edu/13stacks">Section\ 1.3</a>\ of\r\n\ \ <i>Algorithms,\ 4th\ Edition</i>\ by\ Robert\ Sedgewick\ and\ Kevin\ Wayne.\r\n\r\n\ \ @author\ Robert\ Sedgewick\r\n\ \ @author\ Kevin\ Wayne\r\n\r\n\ \ @param\ <Item>\ the\ generic\ type\ each\ item\ in\ this\ stack\r\n
comment1.params=
comment1.target=Stack()
comment1.text=\r\n\ Initializes\ an\ empty\ stack.\r\n
comment2.params=
comment2.target=boolean\ isEmpty()
comment2.text=\r\n\ Returns\ true\ if\ this\ stack\ is\ empty.\r\n\r\n\ @return\ true\ if\ this\ stack\ is\ empty;\ false\ otherwise\r\n
comment3.params=
comment3.target=int\ size()
comment3.text=\r\n\ Returns\ the\ number\ of\ items\ in\ this\ stack.\r\n\r\n\ @return\ the\ number\ of\ items\ in\ this\ stack\r\n
comment4.params=item
comment4.target=void\ push(java.lang.Object)
comment4.text=\r\n\ Adds\ the\ item\ to\ this\ stack.\r\n\r\n\ @param\ \ item\ the\ item\ to\ add\r\n
comment5.params=
comment5.target=java.lang.Object\ pop()
comment5.text=\r\n\ Removes\ and\ returns\ the\ item\ most\ recently\ added\ to\ this\ stack.\r\n\r\n\ @return\ the\ item\ most\ recently\ added\r\n\ @throws\ NoSuchElementException\ if\ this\ stack\ is\ empty\r\n
comment6.params=
comment6.target=java.lang.Object\ peek()
comment6.text=\r\n\ Returns\ (but\ does\ not\ remove)\ the\ item\ most\ recently\ added\ to\ this\ stack.\r\n\r\n\ @return\ the\ item\ most\ recently\ added\ to\ this\ stack\r\n\ @throws\ NoSuchElementException\ if\ this\ stack\ is\ empty\r\n
comment7.params=
comment7.target=java.lang.String\ toString()
comment7.text=\r\n\ Returns\ a\ string\ representation\ of\ this\ stack.\r\n\r\n\ @return\ the\ sequence\ of\ items\ in\ this\ stack\ in\ LIFO\ order,\ separated\ by\ spaces\r\n
comment8.params=
comment8.target=java.util.Iterator\ iterator()
comment8.text=\r\n\ Returns\ an\ iterator\ to\ this\ stack\ that\ iterates\ through\ the\ items\ in\ LIFO\ order.\r\n\r\n\ @return\ an\ iterator\ to\ this\ stack\ that\ iterates\ through\ the\ items\ in\ LIFO\ order\r\n
comment9.params=args
comment9.target=void\ main(java.lang.String[])
comment9.text=\r\n\ Unit\ tests\ the\ {@code\ Stack}\ data\ type.\r\n\r\n\ @param\ args\ the\ command-line\ arguments\r\n
numComments=10
